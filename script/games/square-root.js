(function () {
    window.gameConfigs = window.gameConfigs || {};

    window.gameConfigs['square-root'] = {
        // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
        title: "üé™ –ö–û–†–ï–ù–¨-–®–û–£! üéÅ",
        questionPrompt: "–ö–∞–∫–æ–≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑:",
        helpHTML: `
            <p>–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ —á–∏—Å–ª–∞ - —ç—Ç–æ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏ –Ω–∞ —Å–µ–±—è –¥–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —á–∏—Å–ª–æ.</p>
            <p>–ü—Ä–∏–º–µ—Ä: ‚àö25 = 5, –ø–æ—Ç–æ–º—É —á—Ç–æ 5 √ó 5 = 25</p>
        `,

        // –°—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        gameId: 'square-root',
        answerType: 'textInput', // –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∏–ø –æ—Ç–≤–µ—Ç–æ–≤!
        levelUpScoreMultiplier: 30, // –î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –Ω—É–∂–Ω–æ 30 * —É—Ä–æ–≤–µ–Ω—å –æ—á–∫–æ–≤
        // timePerQuestion: 10, // –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç: 10 —Å–µ–∫—É–Ω–¥

        getSolutionHTML: (gameInstance) => {
            const number = gameInstance.currentQuestionData.number;
            const correctAnswer = gameInstance.correctAnswer;
            return `<p>‚àö${number} = ${correctAnswer}, –ø–æ—Ç–æ–º—É —á—Ç–æ ${correctAnswer} √ó ${correctAnswer} = ${number}</p>`;
        },


        generateQuestionAndAnswers: (level, existingQuestionData = null) => {
            let number;
            if (existingQuestionData) {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∏—Å–ª–æ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                number = existingQuestionData.number;
            } else {
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
                if (level <= 3) {
                    const squares = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100];
                    number = squares[Math.floor(Math.random() * squares.length)];
                } else if (level <= 6) {
                    const squares = [121, 144, 169, 196, 225];
                    number = squares[Math.floor(Math.random() * squares.length)];
                } else {
                    const base = Math.floor(Math.random() * 15) + 11; // –æ—Ç 11 –¥–æ 25
                    number = base * base;
                }
            }

            const correctAnswer = Math.sqrt(number);

            let answers = [correctAnswer];
            while (answers.length < 4) {
                let wrongAnswer = correctAnswer + (Math.floor(Math.random() * 5) + 1) * (Math.random() > 0.5 ? 1 : -1);
                if (wrongAnswer < 0) wrongAnswer = 0;
                if (!answers.includes(wrongAnswer)) {
                    answers.push(wrongAnswer);
                }
            }

            return {
                question: number,
                correctAnswer: correctAnswer,
                answers: answers,
                questionData: { number: number }
            };
        },

        getSuccessMessage: () => {
            const messages = [
                "–í–µ—Ä–Ω–æ! –¢—ã –≥–µ–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –∫–æ—Ä–Ω–µ–π!",
                "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ö–∞–∫–æ–π —Ç—ã —É–º–Ω—ã–π!",
                "–û—Ç–ª–∏—á–Ω–æ! –¢—ã –º–∞—Å—Ç–µ—Ä –∫–æ—Ä–Ω–µ–π!",
                "–°—É–ø–µ—Ä! –¢—ã —Ä–µ—à–∏–ª —ç—Ç–æ –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!",
                "–ë—Ä–∞–≤–æ! –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –∫–æ—Ä–Ω–∏ —Ç–µ–±–µ –ø–æ –ø–ª–µ—á—É!"
            ];
            return messages[Math.floor(Math.random() * messages.length)];
        },

        getHint: (gameInstance) => {
            const number = gameInstance.currentQuestionData.number;
            const hints = [
                `–ü–æ–º–Ω–∏: –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ ${number} - —ç—Ç–æ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏ –Ω–∞ —Å–µ–±—è –¥–∞–µ—Ç ${number}.`,
                "–ü–æ–ø—Ä–æ–±—É–π –≤—Å–ø–æ–º–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ —á–∏—Å–µ–ª!",
                "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—Å—è!",
            ];
            return hints[Math.floor(Math.random() * hints.length)];
        }
    };
})();